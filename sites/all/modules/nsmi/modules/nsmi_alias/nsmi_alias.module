<?php

/**
 * @file nsmi_alias.module
 * Add user friendly aliases for NSMI vocabulary
 */

/**
 * Implementation of hook_menu().
 */
function nsmi_alias_menu() {
  $items = array();

  $items['admin/settings/nsmi/alias'] = array(
    'title' => 'Alias',
    'description' => 'Aliases for NSMI vocabulary.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nsmi_alias_admin'),
    'access arguments' => array('administer nsmi'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 4,
    
  );
  $items['admin/settings/nsmi/alias/rebuild'] = array(
    'title' => 'Rebuild NSMI Aliases',
    'description' => 'Rebuild aliases for NSMI vocabulary.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nsmi_alias_rebuild_confirm'),
    'access arguments' => array('administer nsmi'),
    'type' => MENU_CALLBACK,
    
  );
  $items['admin/settings/nsmi/alias/delete'] = array(
    'title' => 'Remove NSMI Aliases',
    'description' => 'Remove aliases for NSMI vocabulary.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nsmi_alias_delete_confirm'),
    'access arguments' => array('administer nsmi'),
    'type' => MENU_CALLBACK
    
  );

  return $items;
}

function nsmi_alias_admin($form_state) {
  $form['top']['top'] = array(
    '#type' => 'textfield',
    '#title' => t('Top level'),
    '#description' => t('Set an alias for top level of the directory. The default is \'dir\', so you can access the top level with http://!domain/dir', array('!domain' => $_SERVER['HTTP_HOST'])),
    '#default_value' => variable_get('nsmi_alias_top', ''),
    '#size' => 20,
    '#maxlength' => 128,
  );
  $form['top']['use'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use top level for lower level directories.'),
    '#description' => t('If checked, top level will be included in the aliases for the directory. e.g.) With checked, http://!domain/dir/example. With unchecked, http://!domain/example', array('!domain' => $_SERVER['HTTP_HOST'])),
    '#default_value' => variable_get('nsmi_alias_top_use', 0),
  );

  $form['rebuild'] = array(
    '#type' => 'submit',
    '#value' => t('Rebuild aliases'),
  );

  $form['delete'] = array(
    '#type' => 'submit',
    '#value' => t('Remove aliases'),
  );

  return $form;
}

function nsmi_alias_admin_validate($form, &$form_state) {
  $top = trim($form_state['values']['top']);
  $top = str_replace(' ', '_', $top);
  $top = str_replace('&', 'and', $top);
  $top = preg_replace('/[^\w\s\.\-\_]/', '', $top);
      
  variable_set('nsmi_alias_top', $top);
  variable_set('nsmi_alias_top_use', (int)$form_state['values']['use']);
  
  if ($form_state['values']['op'] == t('Rebuild aliases')) {
    drupal_goto('admin/settings/nsmi/alias/rebuild');
  }
  elseif ($form_state['values']['op'] == t('Remove aliases')) {
    drupal_goto('admin/settings/nsmi/alias/delete');
  }
}

function nsmi_alias_rebuild_confirm() {
  return confirm_form(array(), t('Are you sure you want to rebuild the aliases for NSMI vocabulary?'),
                  'admin/settings/nsmi/alias', t('Rebuilding aliases may take a while.'), t('Rebuild aliases'), t('Cancel'));
}

function nsmi_alias_rebuild_confirm_submit($form, &$form_state) {
  // Clean alias table first
  db_query("DELETE FROM {url_alias} WHERE src = 'dir'");
  db_query("DELETE FROM {url_alias} WHERE src LIKE 'dir/%%'");
  db_query("DELETE FROM {cache} WHERE cid LIKE 'nsmi_children_tid_%%'");
  
  $terms = taxonomy_get_tree(variable_get('nsmi_associated_vid', 0));
  $count = 0;
  
  $top = variable_get('nsmi_alias_top', '');
  $top_use = variable_get('nsmi_alias_top_use', 0);
  
  if ($terms) {
    if ($top) {
      path_set_alias('dir', $top);
      $count++;
    }
    else {
      $top = 'dir';
    }
    
    foreach ($terms as $term) {
      $current = taxonomy_get_term($term->tid);
      $breadcrumb = array($current->name);
      while ($parents = taxonomy_get_parents($current->tid)) {
        $current = array_shift($parents);
        $breadcrumb[] = $current->name;
      }
      if ($top_use) {
        $breadcrumb[] = $top;
      }
      $breadcrumb = array_reverse($breadcrumb);
      
      $alias = implode('/', $breadcrumb);
      $alias = str_replace('  ', ' ', $alias);
      $alias = str_replace(' ', '_', $alias);
      $alias = str_replace('&', 'and', $alias);
      $alias = preg_replace('/[^\w\s\.\-\_\/]/', '', $alias);
      //$alias = urlencode($alias);
      path_set_alias('dir/' . $term->tid, $alias);
      $count++;
    }
 
    drupal_set_message(t('%count aliases for NSMI vocabulary have been rebuilt.', array('%count' => $count)));
  }
  else {
    drupal_set_message(t('There is no NSMI vocabulary to add aliases for.'));
  }
  $form_state['redirect'] = 'admin/settings/nsmi/alias';
}

function nsmi_alias_delete_confirm() {
  return confirm_form(array(), t('Are you sure you want to remove the aliases for NSMI vocabulary?'),
                  'admin/settings/nsmi/alias', '', t('Remove aliases'), t('Cancel'));
}

function nsmi_alias_delete_confirm_submit($form, &$form_state) {
  db_query("DELETE FROM {url_alias} WHERE src = 'dir'");
  db_query("DELETE FROM {url_alias} WHERE src LIKE 'dir/%%'");
  db_query("DELETE FROM {cache} WHERE cid LIKE 'nsmi_children_tid_%%'");

  drupal_set_message(t('Aliases for NSMI vocabulary have been removed.'));
  $form_state['redirect'] = 'admin/settings/nsmi/alias';
  return;
}
