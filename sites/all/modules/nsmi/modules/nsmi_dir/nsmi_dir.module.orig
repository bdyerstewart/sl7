<?php

/**
 * @file nsmi_dir.module
 * Display Yahoo like directory
 */

/**
 * Implementation of hook_init().
 */
function nsmi_dir_init() {
  drupal_add_css(drupal_get_path('module', 'nsmi_dir') .'/nsmi_dir.css');
}

/**
 * Implementation of hook_menu().
 */
function nsmi_dir_menu() {
  $items = array();

  $items['dir'] = array(
    'title' => t('Directory'),
    'description' => t('Yahoo like directory.'),
    'page callback' => 'nsmi_dir_directory',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM
    
  );

  return $items;
}

function nsmi_dir_directory() {
  return theme('nsmi_dir_directory');
}

function nsmi_dir_get_tid_url($dir) {
  array_shift($dir);
  $tid = array_shift($dir);
  return $tid;
  /*
  array_shift($dir);
  $dir_depth = count($dir);
  for ($i = 0; $i < $dir_depth; $i++) {
    $out[] = taxonomy_get_term_by_name($dir[$i]);
  }
  return $out;
  */
}

function nsmi_get_stats($tid, $node_count_only = FALSE) {
  global $user, $desc;
  static $node_grants;
  
  $desc = array($tid);

  if ($node_grants === NULL) {
    $node_grants = module_invoke_all('node_grants', $user, 'view');
  }
  
  if (!$node_count_only) {
    $children_count = nsmi_get_children_count($tid);
    $children_count = $children_count ? $children_count : '-';
  }

  if ($node_grants) {
    // Code borrowed from node_access().
    $grants = array();
    foreach (node_access_grants('view', $user) as $realm => $gids) {
      foreach ($gids as $gid) {
        $grants[] = "(gid = $gid AND realm = '$realm')";
      }
    }

    $grants_sql = '';
    if (count($grants)) {
      $grants_sql = 'AND ('. implode(' OR ', $grants) .')';
    }

    $node_count = db_result(db_query("SELECT COUNT(*) FROM {term_data} d INNER JOIN {term_node} tn ON d.tid = tn.tid INNER JOIN {node_access} na ON tn.nid = na.nid INNER JOIN {node} n ON na.nid = n.nid WHERE d.vid = %d AND d.tid IN (%s) $grants_sql AND grant_view >= 1 AND n.status <> 0", variable_get('nsmi_associated_vid', 0), implode(',', $desc)));
    
  }
  else {
    $node_count = db_result(db_query('SELECT COUNT(*) FROM {term_data} d INNER JOIN {term_node} tn ON d.tid = tn.tid INNER JOIN {node} n ON na.nid = n.nid WHERE d.vid = %d AND d.tid IN (%s) AND n.status <> 0', variable_get('nsmi_associated_vid', 0), implode(',', $desc)));
  }
  $node_count = $node_count ? $node_count : '-';
  
  if ($node_count_only) {
    return "$node_count";
  }
  else {
    return "$children_count , $node_count";
  }
}

function nsmi_get_children_count($tid) {
  global $desc;
  $desc[] = $tid;
  
  $children = taxonomy_get_children($tid);
  $count = 0;
  foreach ($children as $term) {
    $count++;
    $count += nsmi_get_children_count($term->tid);
  }
  return $count;
}

/**
 * Implementation of hook_theme().
 */
function nsmi_dir_theme() {
  return array(
    'nsmi_dir_directory' => array(
      'arguments' => array()
    ),
    'nsmi_dir_children' => array(
      'arguments' => array('tid' => 0, 'vid' => 0)
    ),
    'nsmi_dir_term_nodes' => array(
      'arguments' => array('str_tids' => 0, 'depth' => 0)
    ),
    'nsmi_dir_render_nodes' => array(
      'arguments' => array('result' => NULL)
    ),
    'nsmi_dir_term_synonyms' => array(
      'arguments' => array('tid' => 0)
    ),
    'nsmi_dir_bctitle' => array(
      'arguments' => array('bc' => array(), 'class' => NULL)
    ),
  );
}

function theme_nsmi_dir_directory() {
  $alias = ucwords(str_replace("_"," ",variable_get('nsmi_alias_top', '')));
  drupal_set_title(t($alias));

  $dir = explode('/', $_GET['q']);
  $vid = variable_get('nsmi_associated_vid', 0);
  
  $tid = nsmi_dir_get_tid_url($dir);
  $out = 'Terms are listed followed by numbers in the form of  (sub-terms, articles)';
  $out .= theme('nsmi_dir_children', (int)$tid, $vid);
  $out .= theme('nsmi_dir_term_synonyms', (int)$tid);
  $out .= '<div style="clear:both;"></div>';
  $out .= theme('nsmi_dir_term_nodes', (int)$tid);
  
  return $out;
}

function theme_nsmi_dir_children($tid, $vid) {
  $terms = taxonomy_get_children($tid, $vid);

  foreach ($terms as $term) {
    $list[] = l($term->name, "dir/$term->tid") . ' <span class="nsmi-parentheses">(' . nsmi_get_stats($term->tid) . ')</span>';
  }
  
  if ($list) {
    if (($count = count($list)) > 5) {
      $count = ceil($count / 2);
      for ($i = 0; $i < $count; $i++) {
        $half[] = array_shift($list);
      }
      $out = '<div class="nsmi-children-half">' . theme('item_list', $half) . '</div>';
      
      $out .= '<div class="nsmi-children-half">' . theme('item_list', $list) . '</div>';
    }
    else {
      $out = theme('item_list', $list);
    }
    $out = '<div class="nsmi-children-container">' . $out . '</div>';
  }
  else {
    $out = '';
  }
  
  return $out;
}

function theme_nsmi_dir_term_synonyms($tid) {
  $synonyms = taxonomy_get_synonyms($tid);
  
  foreach ($synonyms as $s) {
    if (is_numeric($s)) {
      $syn = $s;
      break;
    }
  }
  if ($syn) {
    $result = db_query("SELECT ts.tid FROM {term_synonym} ts JOIN {term_data} t ON ts.tid = t.tid AND t.vid = %d WHERE ts.name = '%s' AND ts.tid <> %d" , variable_get('nsmi_associated_vid', 0), $syn, $tid);

    while ($term = db_fetch_object($result)) {
      $current = taxonomy_get_term($term->tid);
      $breadcrumb = array(l($current->name, 'dir/'. $current->tid) . ' (' . nsmi_get_stats($current->tid) . ')');
      while ($parents = taxonomy_get_parents($current->tid)) {
        $current = array_shift($parents);
        $breadcrumb[] = l($current->name, 'dir/'. $current->tid);
      }
      $breadcrumb[] = l(t('Top'), 'dir');
      $breadcrumb = array_reverse($breadcrumb);

      $list[] = theme('nsmi_dir_bctitle', $breadcrumb);
    }
    if ($list) {
      $see_also = theme('item_list', $list);
    }
  }
  
  $list = array();
  foreach ($synonyms as $s) {
    if (!is_numeric($s)) {
      $list[] = $s;
    }
  }
  if ($list) {
    $synonym = theme('item_list', $list);
  }
  
  if ($see_also or $synonym) {
    $out = '<div class="nsmi-synonyms-container">';
    $out .= $see_also ? '<strong>See also:</strong><br />' . $see_also : '';
    $out .= $synonym ? '<strong>Synonyms:</strong><br />' . $synonym : '';
    $out .= '</div>';
    return  $out;
  }
  else {
    return '';
  }
}

// Code borrowed from taxonomy_term_page()
function theme_nsmi_dir_term_nodes($tid, $depth = 0) {

	if ($tid) 
	{
		$term = db_fetch_object(db_query(db_rewrite_sql('SELECT t.tid, t.name FROM {term_data} t WHERE t.tid = %d', 't', 'tid'), $tid));

		if ($term->name) 
		{
			$title[] = $term->name;     							// get term name to use as title
			$current = taxonomy_get_term($tid);						// get current taxonomy term
			
			// Build breadcrumb based on first hierarchy of first term:
			$breadcrumb = drupal_get_breadcrumb();      			// get original breadcrumb
			// get alias and format
			$alias = ucwords(str_replace("_"," ",variable_get('nsmi_alias_top', '')));
			
			$breadcrumb[] = l($alias, variable_get('nsmi_alias_top', '')); // Add directory link to breadcrumb
			
			$hierarchy = array();
			
			while ($parents = taxonomy_get_parents($current->tid)) 	// create array of parent items
			{
				$current = array_shift($parents);
				$hierarchy[] = l($current->name, 'dir/'. $current->tid);
			}

			$hierarchy = array_reverse($hierarchy);					// reverse parent items array
			$breadcrumb = array_merge($breadcrumb, $hierarchy);		// merge breadcrumb with parent items
			drupal_set_breadcrumb($breadcrumb);  					// set new breadcrumb

			$active_trail = menu_get_active_trail();				// get the current active trail
			$active_trail[1][title] = $title[0];					// set the title for the Directory to current item title
			menu_set_active_trail($active_trail);					// set the new active trail


			drupal_set_title(theme('nsmi_dir_bctitle', $title, 'bctitle'));

			$output = theme('nsmi_dir_render_nodes', taxonomy_select_nodes(array($tid), 'or', $depth, TRUE));

			return $output;

			break;
		}
		else 
		{
			return NULL;
		}
	}
}

function theme_nsmi_dir_render_nodes($result) {
  $output = '';
  $has_rows = FALSE;
  while ($node = db_fetch_object($result)) {
    $node = node_load($node->nid);
    $output .= '<h2 class="nsmi_node-teaser-title"><a href="' . url('node/'. $node->nid) . '">' . $node->title . '</a></h2>';
    
    $teaser = check_plain(strip_tags(substr($node->body, 0, 250)));
    $output .= '<div class="content clear-block nsmi-node-teaser">' . $teaser . '</div>';
    $has_rows = TRUE;
  }
  if ($has_rows) {
    $output .= theme('pager', NULL, variable_get('default_nodes_main', 10), 0);
  }
  else {
    $output .= '<p>'. t('There are currently no posts in this category.') .'</p>';
  }
  return $output;
}


function theme_nsmi_dir_bctitle($bc, $class = NULL) {
	if ($class)	{
		return "<div class=\"$class\">". array_pop($bc) .'</div>';
	} else {
		return '<div>'. implode(' &gt; ', $bc) .'</div>';
	}
}